name: Playwright Tests with Allure Report

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  e2eTest:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v4
      
      # Setup Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      
      # Install dependencies
      - name: Install dependencies
        run: npm ci
      
      # Install Playwright
      - name: Install Playwright
        run: npx playwright install --with-deps
      
      # Run tests with Allure reporting
      - name: Run Playwright tests with Allure
        run: |
          start_time=$(date +%s)
          allurectl watch -- npx playwright test || true
          end_time=$(date +%s)
          echo "DURATION_SECONDS=$((end_time - start_time))" >> $GITHUB_ENV
        env:
          ALLURE_RESULTS: './allure-results'
      
      # Upload test results
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results
            allure-results
          retention-days: 20
      
      # Checkout gh-pages for history
      - uses: actions/checkout@v4
        if: always()
        with:
          ref: gh-pages
          path: gh-pages
      
      # Generate Allure report
      - uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 20
      
      # Deploy report
      - name: Deploy Allure report
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
      
      # Setup Java
      - name: Setup Java 17
        if: always()
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      
      # Prepare report URL and duration
      - name: Prepare notification data
        if: always()
        run: |
          # Generate report URL
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-history"
          
          # Create duration file
          echo "{\"time\": {\"duration\": ${{ env.DURATION_SECONDS }}}" > duration.json
          
          # Update telegram.json with actual values
          mkdir -p notifications
          jq --arg token "${{ secrets.TELEGRAM_BOT_TOKEN }}" \
             --arg chat "${{ secrets.TELEGRAM_CHAT_ID }}" \
             --arg url "$REPORT_URL" \
             '.telegram.token = $token | 
              .telegram.chat = $chat |
              .base.reportLink = $url' \
             notifications/telegram.json > tmp.json && mv tmp.json notifications/telegram.json
          
          # Copy duration file
          cp duration.json notifications/
      
      # Send notification
      - name: Send Telegram notification
        if: always()
        run: |
          java -jar notifications/allure-notifications-4.9.0.jar
